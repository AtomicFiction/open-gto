dnl 
dnl Process this file with autoconf to produce a configure script.
dnl 

dnl ********************** Macro definitions:

AC_DEFUN([AC_CXX_NAMESPACES],
[AC_CACHE_CHECK(whether the compiler implements namespaces,
ac_cv_cxx_namespaces,
[AC_LANG_SAVE
 AC_LANG_CPLUSPLUS
 AC_TRY_COMPILE([namespace Outer { namespace Inner { int i = 0; }}],
                [using namespace Outer::Inner; return i;],
 ac_cv_cxx_namespaces=yes, ac_cv_cxx_namespaces=no)
 AC_LANG_RESTORE
])
if test "$ac_cv_cxx_namespaces" = yes; then
  AC_DEFINE(HAVE_NAMESPACES,,[define if the compiler implements namespaces])
fi
])

AC_DEFUN([AC_CXX_HAVE_STL],
[AC_CACHE_CHECK(whether the compiler supports Standard Template Library,
ac_cv_cxx_have_stl,
[AC_REQUIRE([AC_CXX_NAMESPACES])
 AC_LANG_SAVE
 AC_LANG_CPLUSPLUS
 AC_TRY_COMPILE([#include <list>
#include <deque>
#ifdef HAVE_NAMESPACES
using namespace std;
#endif],[list<int> x; x.push_back(5);
list<int>::iterator iter = x.begin(); if (iter != x.end()) ++iter; return 0;],
 ac_cv_cxx_have_stl=yes, ac_cv_cxx_have_stl=no)
 AC_LANG_RESTORE
])
if test "$ac_cv_cxx_have_stl" = yes; then
  AC_DEFINE(HAVE_STL,,[define if the compiler supports Standard Template Library])
fi
])

dnl ********************** Processing starts here...

AC_INIT(Gto, 2.0)
AC_PREREQ(2.57)

AC_CONFIG_AUX_DIR(config)

AM_INIT_AUTOMAKE()
AC_LANG(C++)
AC_PROG_INSTALL
AC_PROG_CXX

SHARED_VERSION_INFO="2:0:0"
AC_DISABLE_SHARED()
AC_PROG_LIBTOOL()

if test $MAYA_LOCATION; then :; else
    MAYA_LOCATION=/usr/aw/maya
fi

AC_SUBST(gto_maya_location,$MAYA_LOCATION)

AC_ARG_WITH([maya-dir],
            [AC_HELP_STRING([--with-maya-dir=DIR],
                            [Maya 4.x install location])],
            [gto_maya_location=$withval])


AC_ARG_ENABLE([maya-plugin],
          [AC_HELP_STRING([--enable-maya-plugin],
                         [Build GtoIO plugin for Maya 4.x (default=yes)])],
          [gto_build_maya=$enableval],
          [gto_build_maya=yes])

echo $gto_build_maya

AM_CONDITIONAL(GTO_BUILD_MAYA, test x$gto_build_maya = xyes)

dnl ********************** System Checks:

AC_HEADER_STDC
AC_C_CONST
AC_TYPE_SIZE_T
AC_FUNC_STAT
AC_CHECK_HEADERS([unistd.h])

AC_CHECK_LIB(z, gzopen, [AC_DEFINE(GTO_SUPPORT_ZIP) LIBS="$LIBS -lz"])

AC_CXX_HAVE_STL
if test "$ac_cv_cxx_have_stl" != yes; then
    AC_MSG_ERROR(STL Support is required)
fi

if test `uname` = Linux; then
        # Keeps maya includes from complaining about deprecated #pragmas
        AC_DEFINE( LINUX )
fi

AC_MSG_CHECKING(for ios_base)
    AC_TRY_COMPILE(
    [
    #include <iostream>
    ],
    [
    if(std::ios_base::cur);
    ],
    [AC_MSG_RESULT(yes)
    AC_DEFINE(HAVE_FULL_IOSTREAMS)],
    [AC_MSG_RESULT(no)])

if test "x$gto_build_maya" = xyes; then
    AC_MSG_CHECKING([for gcc 2.96])
    AC_RUN_IFELSE([AC_LANG_PROGRAM([],[
        if( ! ( ( __GNUC__ == 2 )
          && ( __GNUC_MINOR__ == 96 ) ) ) return 1;])],
    [AC_MSG_RESULT(yes)],
    [AC_MSG_ERROR(
[

Building the Maya plugin requires gcc 2.96

If you are using RedHat 8.0, install the following RPMs,
and re-run configure with CXX=g++296.

    compat-gcc-7.3-2.96.110
    compat-gcc-c++-7.3-2.96.110
    compat-libstdc++-7.3-2.96.110
    compat-libstdc++-devel-7.3-2.96.110
])
])
fi


dnl ********************** Output:

AC_CONFIG_FILES([Makefile
                 doc/Makefile
                 bin/Makefile
                 bin/gtoinfo/Makefile
                 bin/gtofilter/Makefile
                 bin/gtomerge/Makefile
                 lib/Gto/Makefile
                 lib/Gto/test/Makefile
                 lib/Makefile
                 plugins/Makefile
                 plugins/maya/Makefile])

AC_OUTPUT
